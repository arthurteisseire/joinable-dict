[{"name":"Dict.Joinable","comment":" Let you create any joinable type easily.\n\nThis is the api used for `Dict.OneToOne` and `Dict.ManyToOne` implementations.\nA good other container implementation would be a database table with a forward key in addition to the primary key.\n\nTo make your container \"joinable\", you just need to provide a way to convert it into a `Dict`.\nThen add a `from`, `innerJoin` and (optionally) `outerLeftJoin` method like this:\n\n    from =\n        Dict.Joinable.from convertMyContainerToDict\n\n    innerJoin =\n        Dict.Joinable.innerJoin convertMyContainerToDict\n\n    outerLeftJoin =\n        Dict.Joinable.outerLeftJoin convertMyContainerToDict\n\n    convertMyContainerToDict : MyContainer a -> Dict comparable a\n    convertMyContainerToDict =\n        ...\n\n@docs from, innerJoin, leftOuterJoin\n\n","unions":[],"aliases":[],"values":[{"name":"from","comment":" Equivalent to SQL `FROM`\n","type":"(joinable -> Dict.Dict comparable a) -> joinable -> (a -> result) -> Dict.Dict comparable result"},{"name":"innerJoin","comment":" Equivalent to SQL `INNER JOIN`\n","type":"(joinable -> Dict.Dict comparable a) -> joinable -> Dict.Dict comparable (a -> result) -> Dict.Dict comparable result"},{"name":"leftOuterJoin","comment":" Equivalent to SQL `LEFT OUTER JOIN`\n","type":"(joinable -> Dict.Dict comparable a) -> joinable -> Dict.Dict comparable (Maybe.Maybe a -> result) -> Dict.Dict comparable result"}],"binops":[]},{"name":"Dict.ManyToOne","comment":" Joinable implementation of SQL many-to-one relation\n\n@docs fromList, from, innerJoin, select\n\n","unions":[],"aliases":[],"values":[{"name":"from","comment":" Equivalent to SQL `FROM`\n","type":"Dict.ManyToOne.ManyToOne comparable a -> (List.List a -> result) -> Dict.Dict comparable result"},{"name":"fromList","comment":" The way to init the container from a list of pair\n","type":"List.List ( comparable, a ) -> Dict.ManyToOne.ManyToOne comparable a"},{"name":"innerJoin","comment":" Equivalent to SQL `INNER JOIN`\n","type":"Dict.ManyToOne.ManyToOne comparable a -> Dict.Dict comparable (List.List a -> result) -> Dict.Dict comparable result"},{"name":"select","comment":" Used for clarity only and match SQL queries\n","type":"a -> a"}],"binops":[]},{"name":"Dict.OneToOne","comment":" Joinable implementation of SQL one-to-one relation\n\n@docs from, innerJoin, leftOuterJoin, select\n\n","unions":[],"aliases":[],"values":[{"name":"from","comment":" Equivalent to SQL `FROM`\n","type":"Dict.Dict comparable a -> (a -> result) -> Dict.Dict comparable result"},{"name":"innerJoin","comment":" Equivalent to SQL `INNER JOIN`\n","type":"Dict.Dict comparable a -> Dict.Dict comparable (a -> result) -> Dict.Dict comparable result"},{"name":"leftOuterJoin","comment":" Equivalent to SQL LEFT `OUTER JOIN`\n","type":"Dict.Dict comparable a -> Dict.Dict comparable (Maybe.Maybe a -> result) -> Dict.Dict comparable result"},{"name":"select","comment":" Used for clarity only and match SQL queries\n","type":"a -> a"}],"binops":[]}]